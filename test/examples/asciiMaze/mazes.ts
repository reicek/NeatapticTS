/**
 * Maze Definitions - Collection of test mazes with varying complexity
 * 
 * This module contains predefined ASCII mazes used for testing and training
 * the neural network agents. The mazes range from simple to complex and demonstrate
 * different challenges for pathfinding algorithms.
 * 
 * Maze symbols:
 * - '║' = Wall (obstacle the agent cannot pass through)
 * - '.' = Open path
 * - 'S' = Start position
 * - 'E' = Exit/Goal position
 * 
 * Each maze contains exactly one start ('S') and one exit ('E') position.
 */

/** Very small maze for quick testing with minimal complexity */
export const tiny = [  
  '╔════════════════════╗',
  '║S...................║',
  '╠═══════════════════.║',
  '║....................║',
  '║.═══════════════════╣',
  '║....................║',
  '╚══════════════════╗E║',
];

/** Small spiral maze - tests the agent's ability to follow a continuous path */
export const spiralSmall = [
  '╔═══════════╗',
  '║...........║',
  '║.╔═══════╗.║',
  '║.║.......║.║',
  '║.║.╔═══╗.║.║',
  '║.║.║...║.║.║',
  '║.║.║S║.║.║.║',
  '║.║.╚═╝.║.║.║',
  '║.║.....║.║.║',
  '║.╚═════╝.║.║',
  '║.........║.║',
  '╚═════════╣E║',
];

/** Medium spiral maze - more challenging version requiring longer path following */
export const spiral = [
  '╔═══════════════╗',
  '║...............║',
  '║.║.╔═══════════╣',
  '║.║.║...........║',
  '║.║.║.╔═══════╗.║',
  '║.║.║.║.......║.║',
  '║.║.║.║.╔═══╗.║.║',
  '║.║.║.║.║...║.║.║',
  '║.║.║.║.║S║.║.║.║',
  '║.║.║.║.╚═╝.║.║.║',
  '║.║.║.║.....║.║.║',
  '║.║.║.╚═════╝.║.║',
  '║.║.║.........║.║',
  '║.║.╚═════════╝.║',
  '║.║.............║',
  '║E╠═════════════╝',
];

/** Small maze with multiple path options and dead ends */
export const small = [
  '╔═══════╦══════════╗',
  '║S......║..........║',
  '╠══.╔══.║.╔══.║.║..║',
  '║...║...║.║...║.║..║',
  '║.║.║.══╝.╚═══╝.╚══╣',
  '║.║.║..............║',
  '║.║.╚══════.══╦═╗..║',
  '║.║...........║.║..║',
  '║.╚═════╗.════╣.║..║',
  '║.......║.....║.║..║',
  '╠══════.╚═══╗.║.╚══╣',
  '║...........║.║....║',
  '║.═══.╔════.║.╚═══.║',
  '║.....║.....║......║',
  '╚═════╣E╔═══╩══════╝',
];

/** Medium-sized maze with branching paths and decision points */
export const medium = [
  '╔═╦═══════╦═════════════╗',
  '║S║.......║.............║',
  '║.║.════╗.║.════╗.════╗.║',
  '║.║.....║.║.....║.....║.║',
  '║.╚═══╗.║.╚═══╗.╚═╗.║.║.║',
  '║.....║.║.....║...║.║.║.║',
  '╠═══╗.║.╚═══╗.╠══.║.║.║.║',
  '║...║.║.....║.║...║.║.║.║',
  '║.║.║.╚═══╗.║.║.══╝.║.║.║',
  '║.║.║.....║.║.║.....║.║.║',
  '║.║.╚═══╗.║.║.╚═════╝.║.║',
  '║.║.....║.║.║.........║.║',
  '║.╚═══╗.║.║.╚═════════╣.║',
  '║.....║.║.║...........║.║',
  '╠════.║.║.╚═════╦═══╗.║.║',
  '║.....║.........║...║.║.║',
  '║.════╩═════════╝.║.║.║.║',
  '║.................║.║.║.║',
  '╠══════════════.║.║.║.║.║',
  '║...............║.║...║.║',
  '╠═══════════════╩═╩═══╝.║',
  '║.......................║',
  '║E╔═════════════════════╝',
];

/** Medium-sized maze with branching paths and decision points */
export const medium2 = [
  '╔═╗═══════╦═════════════════════╦═════════════╗',
  '║S║.......║.....................║.............║',
  '║.║.════╗.║.════╗.════╗.║.════╗.║.════╗.════╗.║',
  '║.║.....║.║.....║.....║.║.....║.║.....║.....║.║',
  '║.╚═══╗.║.╚═══╗.╚═╗.║.║.║.╚═══╣.║.╚═══╣.╚═╗.║.║',
  '║.....║.║.....║...║.║.║.║.....║.║.....║...║.║.║',
  '╠═══╗.║.╚═══╗.╠══.║.║.║.╠═══╗.║.╚═══╗.╠══.║.║.║',
  '║...║.║.....║.║...║.║.║.║...║.║.....║.║...║.║.║',
  '║.║.║.╚═══╗.║.║.══╝.║.║.║.║.║.╚═══╗.║.║.══╝.║.║',
  '║.║.║.....║.║.║.....║.║.║.║.║.....║.║.║.....║.║',
  '║.║.╚═══╗.║.║.╚═════╝.║.║.║.╚═══╗.║.║.╚═════╝.║',
  '║.║.....║.║.║.........║.║.║.....║.║.║.........║',
  '║.╚═══╗.║.║.╚═════════╣.║.╚═══╗.║.║.╚═════════╣',
  '║.....║.║.║...........║.║.....║.║.║...........║',
  '╠════.║.║.╚═════╦═══╗.║.║═════╣.║.╚═════╦═══╗.║',
  '║.....║.........║...║.║.║.....║.........║...║.║',
  '║.════╩═════════╝.║.║.║.║.════╩═════════╝.║.║.║',
  '║.................║.║.║.║.................║.║.║',
  '╠══════════════.║.║.║.║.╠══════════════.║.║.║.║',
  '║...............║.║...║.║...............║.║...║',
  '╠═══════════════╩═╩═══╩═╩═══════════════╝.╚═══╣',
  '║.............................................║',
  '║E╔═══════════════════════════════════════════╝',
];

/** Large, complex maze with many intersections and potential paths */
export const large = [
  '╔════════════════════════════════════════╦════════════════╗',
  '║S.......................................║................║',
  '╠═════════.╔═════.═════════════╦═════════╩════════════╦══.║',
  '║..........║...................║......................║...║',
  '║.╔══════.╔╩═.════╗.╔══════════╩═══════════╗.╔═════╗.═╩══.║',
  '║.║.......║.......║.║......................║.║.....║......║',
  '║.╠═══════╝.══════╝.║.║.╔══════════════════╣.║.════╬══.═══╣',
  '║.║.................║.║.║..................║.║.....║......║',
  '║.║.════╦══════════.║.║.║.║.══════════════.║.╠════.║.═════╣',
  '║.║....╔╩╗..........╚╦╝.║.║..............║.║.║.....║......║',
  '╠═╝..║.║.╠══.║.║.║...║..╚═╩╦═╗.═════════.║.║.║.════╩══════╣',
  '║....║.║.║...║.║.║.║.║.....║.║.......║...║.║..............║',
  '╠═.══╩═╝.╚═══╩═╝.╚═╩╦╩════╦╝.║.═══╦══╝.══╩╦╩════════════.═╣',
  '║...................║.....║..║....║.......║...............║',
  '╠══════════════════.║.║.══╣.╔═════╩════.╔═╝.══════════════╣',
  '║...................║.║...║.║...........║.................║',
  '║.╔═════════════════╝.╚═══╝.║.╔══.══════╩═════╦═.═════════╣',
  '║.║.....................║...║.║...............║...........║',
  '║.╚═╗.╔═══════╦═══╦════.║.╔═╝.╚═╗..═════════╗.╠═════════.═╣',
  '║...║.║.......║...║.....║.║.....║...........║.║...........║',
  '╠═╗.║.╚═══╗.║.║.║.║.║.══╝.╔══.╔═╩════.╔═╦══.║.║.═════════.║',
  '║.║.║.....║.║...║.║.║.....║...║.......║.║...║.............║',
  '║.║.╚═════╣.║.╔═╣.╚═╝.╔══.║.╔═╩══.════╝.║.══╩═════════════╣',
  '║.║.......║...║.║.....║...║.║...........║.................║',
  '║.╚══════.╚══.║.╠════.╚═══╝.╚══.═╦═╦════╩════════════════.║',
  '║.............║.║................║.║......................║',
  '╠════════════.║.║.════╦══════.═══╝.║.╔══════════.═════════╣',
  '║.............║.......║............║.║....................║',
  '║.╔══════════.╚═══╦═══╣.╔═╦═╦══════╩═╩╗.╔══════.║.════════╣',
  '║.║...............║...║.║.║.║.........║.║.......║.........║',
  '║.╠═╗.════════════╝.══╝.║.║.║.╔═══════╝.║.══════╩═════════╣',
  '║.║.║.....................║.║.║.........║.................║',
  '║.║.╚═══════════════.═════╝.║.║.═══════════════════════...║',
  '║.║.......................................................║',
  '╠═╩═╦═══╦═══╦═══╦═══╦═══╦═══╦═╗.══════════════════════════╣',
  '║...║...║...║...║...║...║...║.║...........................║',
  '║.║.║.║.║.║.║.║.║.║.║.║.║.║.║.╚══════════════════════════.║',
  '║.║...║...║...║...║...║...║...............................║',
  '║E╔═══╩═══╩═══╩═══╩═══╩═══╩═══════════════════════════════╝',
];

/** 
 * Extremely large and challenging "Minotaur's Labyrinth" maze
 * This maze represents the most complex challenge with many parallel paths,
 * symmetrical corridors, and a very long optimal solution path.
 */
export const minotaur = [
'╔══════════════════════════════════════════════════════════════════════════════╗',
'║..............................................................................║',
'║.╔════════════╗.╔═════════════════════════════════════════╗.╔══════════════╗..║',
'║.║............║.║.........................................║.║..............║..║',
'║.║.╔════════╗.║.║.╔═════════════════════════════════════╗.║.║.╔════════╗.║.║..║',
'║.║.║........║.║.║.║.....................................║.║.║.║........║.║.║..║',
'║.║.║.╔════╗.║.║.║.║.╔═════════════════════════════════╗.║.║.║.║.╔════╗.║.║.║..║',
'║.║.║.║....║.║.║.║.║.║.................................║.║.║.║.║.║....║.║.║.║..║',
'║.║.║.║.╔═.║.║.║.║.║.║.╔═════════════════════════════╗.║.║.║.║.║.║.╔═.║.║.║.║..║',
'║.║.║.║.║..║.║.║.║.║.║.║.............................║.║.║.║.║.║.║.║..║.║.║.║..║',
'║.║.║.║.║.═╝.║.║.║.║.║.║.╔═════════════════════════╗.║.║.║.║.║.║.║.║.═╣.║.║.║..║',
'║.║.║.║.║....║.║.║.║.║.║.║.........................║.║.║.║.║.║.║.║....║.║.║.║..║',
'║.║.║.║.╚════╝.║.║.║.║.║.║.╔═════════════════════╗.║.║.║.║.║.║.║.╚════╝.║.║.║..║',
'║.║.║.║........║.║.║.║.║.║.║.....................║.║.║.║.║.║.║.║........║.║.║..║',
'║.║.║.╚════════╝.║.║.║.║.║.║.╔═════════════════╗.║.║.║.║.║.║.║.╚════════╝.║.║..║',
'║.║.║............║.║.║.║.║.║.║.................║.║.║.║.║.║.║.║............║.║..║',
'║.║.╚════════════╝.║.║.║.║.║.║.╔═════════════╗.║.║.║.║.║.║.║.╚════════════╝.║..║',
'║.║................║.║.║.║.║.║.║.............║.║.║.║.║.║.║.║................║..║',
'║.╠════════════════╝.║.║.║.║.║.║.╔═════════╗.║.║.║.║.║.║.║.╚════════════════╣..║',
'║.║..................║.║.║.║.║.║.║.........║.║.║.║.║.║.║.║..................║..║',
'║.║.╔════════════════╝.║.║.║.║.║.║.╔═════╗.║.║.║.║.║.║.║.╚════════════════╗.║..║',
'║.║.║..................║.║.║.║.║.║.║.....║.║.║.║.║.║.║.║..................║.║..║',
'║.║.║.╔════════════════╝.║.║.║.║.║.║.╔═╗.║.║.║.║.║.║.║.╚════════════════╗.║.║..║',
'║.║.║.║..................║.║.║.║.║.║.║S║.║.║.║.║.║.║.║..................║.║.║..║',
'║.║.║.║.╔════════════════╝.║.║.║.║.║.║.║.║.║.║.║.║.║.╚════════════════╗.║.║.║..║',
'║.║.║.║.║..................║.║.║.║.║.║...║.║.║.║.║.║..................║.║.║.║..║',
'║.║.║.║.║.╔════════════════╝.║.║.║.║.╠═══╝.║.║.║.║.║.═════════════════╣.║.║.║..║',
'║.║.║.║.║.║..................║.║.║.║.║.....║.║.║.║.║..................║.║.║.║..║',
'║.║.║.║.║.║.╔════════════════╝.║.║.║.╚═════╝.║.║.║.╚════════════════╗.║.║.║.║..║',
'║.║.║.║.║.║.║..................║.║.║.........║.║.║..................║.║.║.║.║..║',
'║.║.║.║.║.║.║.╔════════════════╝.║.╚═════════╝.║.╚════════════════╗.║.║.║.║.║..║',
'║.║.║.║.║.║.║.║..................║................................║.║.║.║.╠═╝..║',
'║.║.║.║.║.║.║.║.╔════════════════╩═════════════════════════════╗.╔╩╦╩╦╩╦╩╦╩╗...║',
'║.║.║.║.║.║.║.║.║..............................................║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.╔══════════╗.╔════════════════════════════╗..║.║...║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║..........║.║............................║..║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║.╔══════╗.║.║.╔════════════════════════╗.╚╗.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║.║......║.║.║.║........................║..║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║.╠══╗.║.║.║.║.╠════════════════════╗..╔╩╗.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║.║..║.║.║.║.║.║....................║..║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║.║.═╝.║.║.║.║.║.╔════════════════╗.╚╗.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║.║....║.║.║.║.║.║................║..║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║.╚════╝.║.║.║.║.║.╔════════════╗.╚╗.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.║........║.║.║.║.║.║............║..║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║.╚════════╝.║.║.║.║.║.╔═════════.╠═.║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.║............║.║.║.║.║.║..........║..║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.║.║.╚════════════╝.║.║.║.║.║.╔══════╗.╚╗.║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║....................║.║.║.║.║.║......║..║.║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║.═══════════════════╝.║.║.║.║.║.╔══╗.╚╗.║.║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.║.║......................║.║.║.║.║.║..║..║.║.║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║.╚═╩══════════════════════╝.║.║.║.║.║.═╝.╔╝.║.║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.║............................║.║.║.║.║....║..║.║.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║.╚══════════════════════════════╝.║.║.║.═══╩══╩╦╝.║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.║..................................║.║.║........║..║.║.║.║.║.║.║.║.║.║.║.║.║',
'║.║.╚══════════════════════════════════╝.║.║.═══════╩══╝...║.║.║.║.║.║.║.║.║.║.║',
'║........................................║.║...........║...║.║.║.║.║.║.║.║.║.║.║',
'║.═══════════════════════════════════════╝.╚═══════════╝...║.║.║.║.║.║.║.║.║.║.║',
'║..........................................................║.......║.........║.║',
'╚══════════════════════════════════════════════════════════╩═══════╩═════════╣E║',
];
